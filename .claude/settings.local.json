{
  "permissions": {
    "allow": [
      "Bash(npm run:*)",
      "Bash(cat:*)",
      "Bash(npx vitest run:*)",
      "Bash(npm test)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(npx tsc:*)",
      "Bash(npm test:*)",
      "Read(//c/Users/tappt/.cursor/**)",
      "Bash(npx @modelcontextprotocol/server-filesystem@latest:*)",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "Bash(npm config:*)",
      "Bash(npx @testsprite/testsprite-mcp@latest:*)",
      "Bash(pip install:*)",
      "Bash(python -m pre_commit run:*)",
      "Bash(node:*)",
      "Bash(docker:*)",
      "Bash(npm audit:*)",
      "Bash(git checkout:*)",
      "Bash(git rm:*)",
      "Bash(timeout 30 npx vitest run:*)",
      "Bash(pre-commit:*)",
      "Bash(python:*)",
      "Read(//c/Users/tappt/.cache/pre-commit/**)",
      "Bash(time npm run test -- src/tools/smart-write-mcp.test.ts --reporter=minimal)",
      "Bash(time npx vitest run src/tools/smart-write-mcp.test.ts --reporter=basic)",
      "Bash(git reset:*)",
      "Bash(time npx vitest run src/core/prompt-optimization --reporter=basic)",
      "Bash(time npx vitest run src/core/prompt-optimization/ContextAwareTemplateEngine.test.ts --reporter=minimal)",
      "Bash(time npx vitest run src/core/prompt-optimization/ContextAwareTemplateEngine.test.ts)",
      "Bash(time npx vitest run src/context/enhanced-integration/DeepContext7Broker.test.ts)",
      "Bash(time npx vitest run src/optimization/ToolChainOptimizer.test.ts)",
      "Bash(chmod:*)",
      "Bash(./scripts/deploy-production.sh:*)",
      "Bash(where npx)",
      "Bash(npx.cmd @modelcontextprotocol/server-filesystem@latest:*)",
      "Bash(time npx vitest run src/tools/smart-finish.test.ts --reporter=minimal)",
      "Bash(time npx vitest run src/tools/smart-finish.test.ts --reporter=basic)",
      "Bash(time npx vitest run:*)",
      "Bash(find:*)",
      "Bash(timeout 5s npx @modelcontextprotocol/server-github@latest)",
      "Bash(timeout 5s npx @testsprite/testsprite-mcp@latest)",
      "Bash(timeout 5s npx @playwright/mcp@latest)",
      "Bash(timeout 5s npm start)",
      "Bash(NODE_ENV=test npx vitest run src/server.test.ts --reporter=verbose)",
      "Bash(NODE_ENV=test npx vitest run src/server-basic.test.ts)",
      "Bash(NODE_ENV=test npx vitest run src/server-basic.test.ts --reporter=verbose)",
      "Bash(set NODE_ENV=test)",
      "Bash(NODE_ENV=test npx vitest run src/performance.test.ts)",
      "Bash(NODE_ENV=test npx vitest run src/final-integration.test.ts --reporter=basic)",
      "Bash(NODE_ENV=test npx vitest run src/final-integration.test.ts --reporter=default --reporter-options=\"{\"\"summary\"\": false}\")",
      "Bash(NODE_ENV=test npx vitest run src/final-integration.test.ts)",
      "Bash(NODE_ENV=test npx vitest run src/final-integration.test.ts --reporter=verbose)",
      "Bash(NODE_ENV=test npx vitest run src/tools/smart-orchestrate.test.ts)",
      "Bash(NODE_ENV=test timeout 30s npx vitest run src/tools/smart-orchestrate.test.ts --reporter=basic)",
      "Bash(timeout 60s npm run qa:tests)",
      "Bash(timeout 30s npm run test -- src/optimization/ToolChainOptimizer.test.ts --reporter=verbose)",
      "Bash(NODE_ENV=test npx vitest run --coverage --reporter=basic)",
      "Bash(tar:*)",
      "Read(//c/cursor/**)",
      "Bash(timeout 5s npx @modelcontextprotocol/server-filesystem@latest)",
      "Bash(NODE_ENV=test npx vitest run src/prompts/documentation-prompt.test.ts --reporter=verbose)"
    ],
    "deny": [],
    "ask": []
  }
}