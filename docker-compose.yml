services:
  smart-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
      - "8081:3001"
    env_file:
      - docker.env.template
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HEALTH_PORT=3001
      - CONTEXT7_API_KEY=ctx7sk-45825e15-2f53-459e-8688-8c14b0604d02
      - CONTEXT7_USE_HTTP_ONLY=true
      - CONTEXT7_ENABLED=false
      - SKIP_HEALTH_SERVER=true
    volumes:
      - smart-mcp-data:/app/data
      - smart-mcp-logs:/app/logs
    user: "1001:1001"
    command: ["node", "dist/mcp-docker-server.js"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Development service
  smart-mcp-dev:
    build:
      context: .
      target: builder
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CONTEXT7_API_KEY=ctx7sk-45825e15-2f53-459e-8688-8c14b0604d02
      - CONTEXT7_USE_HTTP_ONLY=true
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    profiles:
      - dev

volumes:
  smart-mcp-data:
    driver: local
  smart-mcp-logs:
    driver: local
