# TappMCP - AI-Powered Development Assistant

## Project Overview
TappMCP is an AI-powered MCP server with real analysis capabilities, Context7 intelligence, and comprehensive workflow orchestration.

## Core Standards (All Roles)
- **Quality**: ≥85% test coverage on changed files
- **Security**: Zero critical vulnerabilities, no secrets
- **Performance**: <100ms response time, <2s analysis
- **Complexity**: ESLint complexity ≤10
- **TypeScript**: Strict mode, explicit typing required

## Pre-Work Checklist
1. Run `npm run early-check` - MUST PASS
2. Confirm role explicitly (e.g., "I am now in the Developer role")
3. Follow TDD approach
4. Use TypeScript strict mode

## Role Commands
- "you are now a developer" → AI-Augmented Developer (default)
- "you are now a product strategist" → Product Strategist
- "you are now an operations engineer" → AI Operations Engineer
- "you are now a designer" → UX/Product Designer
- "you are now a qa engineer" → AI Quality Assurance Engineer

## Developer Role (Default)
### Key Responsibilities
- Code generation with TypeScript strict mode
- Test-Driven Development (TDD)
- Security implementation
- Performance optimization
- Quality assurance

### Standards
- **Lines**: ≤400 per turn, ≤120 per file
- **Testing**: Vitest with ≥85% coverage
- **Security**: Pre-commit scanning mandatory
- **Architecture**: Schema-locked I/O, modular design

### AI Assistance Priorities
1. Real analysis using SecurityScanner, StaticAnalyzer, SimpleAnalyzer
2. Context7 intelligence for project-aware insights
3. Workflow orchestration via SimpleSDLCWorkflow
4. TypeScript/Node.js with real-time validation
5. Vulnerability detection using CodeValidator

## Success Metrics
- Security: Zero critical vulnerabilities
- Quality: Focused diffs, comprehensive tests
- Coverage: ≥85% on changed files
- Complexity: ≤10 cyclomatic complexity
- Efficiency: Single-turn success rate

## Important
Refer to CLAUDE.md for detailed implementation guidance and specific code patterns.