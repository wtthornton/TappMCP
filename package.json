{
  "name": "smart-mcp",
  "version": "0.1.0",
  "description": "AI-assisted MCP server with role-based development",
  "main": "dist/server.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/server.js",
    "dev": "ts-node src/server.ts",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:changed": "vitest run --coverage --reporter=verbose",
    "test:real-world": "npm run build && npm test -- src/integration/real_world_workflow.test.ts",
    "test:report": "node scripts/run-test-and-report.js",
    "test:report:open": "node scripts/run-test-and-report.js && start test-report.html",
    "test:detailed": "node scripts/generate-detailed-report.js",
    "test:detailed:open": "node scripts/generate-detailed-report.js && start detailed-test-report.html",
    "test:html": "npm run build && npm test -- src/integration/html_generation.test.ts",
    "test:html:report": "node scripts/generate-html-analysis-report.js",
    "test:html:open": "node scripts/generate-html-analysis-report.js && start html-analysis-report.html",
    "test:mcp": "npm run build && npx vitest run src/integration/mcp_stdio_test.ts",
    "test:mcp:html": "npm run build && npx vitest run src/integration/mcp_html_generation_test.ts",
    "lint": "eslint src/**/*.ts --fix",
    "lint:check": "eslint src/**/*.ts",
    "format": "prettier --write \"src/**/*.{ts,js,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json,md}\"",
    "type-check": "tsc --noEmit",
    "pre-commit": "lint-staged",
    "pre-commit:install": "python -m pre_commit install",
    "pre-commit:update": "python -m pre_commit autoupdate",
    "pre-commit:run": "python -m pre_commit run --all-files",
    "qa:check": "node scripts/qa-check.js",
    "qa:eslint": "npm run lint:check",
    "qa:typescript": "npm run type-check",
    "qa:format": "npm run format:check",
    "qa:tests": "npm run test:coverage",
    "qa:all": "npm run qa:eslint && npm run qa:typescript && npm run qa:format && npm run qa:tests",
    "early-check": "node scripts/early-quality-check.js",
    "security:scan": "gitleaks detect --source . --verbose",
    "security:osv": "osv-scanner -r .",
    "security:semgrep": "semgrep --config=auto --config=p/owasp-top-ten .",
    "docker:build": "docker build -t smart-mcp .",
    "docker:dev": "docker-compose up -d",
    "docker:test": "docker-compose exec app npm test",
    "deploy:prod": "./scripts/deploy-production.sh",
    "deploy:legacy": "node scripts/deploy-local-production.js",
    "deploy:docker": "docker-compose -f docker-compose.yml up -d",
    "deploy:local": "node scripts/deploy-local.js",
    "deploy:stop": "docker-compose down",
    "deploy:logs": "docker-compose logs -f",
    "deploy:health": "curl -f http://localhost:8080/health || exit 1",
    "deploy:status": "docker ps --filter name=tappmcp-smart-mcp --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"",
    "deploy:monitor": "docker stats tappmcp-smart-mcp-1 --no-stream",
    "deploy:rollback": "node scripts/rollback.js",
    "deploy:test": "node scripts/test-deployed-mcp.js",
    "deploy:test-tools": "node scripts/test-mcp-stdio-only.js",
    "demo:comprehensive": "node scripts/comprehensive-mcp-demo-resilient.js",
    "demo:quick": "node scripts/quick-mcp-demo.js"
  },
  "keywords": [
    "mcp",
    "ai",
    "development",
    "cursor",
    "claude"
  ],
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.4.0",
    "@types/handlebars": "^4.0.40",
    "handlebars": "^4.7.8",
    "zod": "^3.22.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "@vitest/coverage-v8": "^3.2.4",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "lint-staged": "^16.1.6",
    "prettier": "^3.6.2",
    "retire": "^5.3.0",
    "ts-node": "^10.9.0",
    "typescript": "^5.0.0",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "src/**/*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yaml,yml}": [
      "prettier --write"
    ]
  },
  "private": true
}
